[General]
network = MTQ
# output-vector-file = ${resultdir}/${configname}-${repetition}.vec
# output-scalar-file = ${resultdir}/${configname}-${iterationvarsf}${repetition}.sca
ned-path = .;/home/filippo/Downloads/omnetpp-5.4.1-src-linux/omnetpp-5.4.1/samples/queueinglib
record-eventlog = false
result-dir = results
sim-time-limit = 300s
simtime-resolution = s
**.result-recording-modes = all

**.sourceCExtended.interArrivalTime = exponential(${lambda=2s, 4s}) 
**.sourceCExtended.numberOfPacket = uniform(2, 4) #k  
**.sourceCExtended.energyForPacket = intuniform(1, 4) #s 

**.sourceEExtended.interArrivalTime = exponential(${w = 1s, 2s, 4s}) 
**.sourceEExtended.nEnergyPacket = uniform(10, 20) #S
**.sourceEExtended.energyForPacket = intuniform(1,4)   #s

**.energyQueueQ2.capacity = ${40, 60, 100}   # N = massimo numero di slot di energia 
**.customerQueueQ1.capacity=${2, 4, 8, -1}   # K = numero max di utenti che possono stare in coda

#**.serverExt.serviceTime = ${erlang_k(2, 0.04s), erlang_k(2, 0.058s), erlang_k(2, 0.07s), erlang_k(3, 0.04s), erlang_k(3, 0.058s), erlang_k(3, 0.07s), exponential(0.04s), exponential(0.058s), exponential(0.07s)}
**.serverExt.serviceTime = erlang_k(${k=1,2,3}, ${z=0.04s, 0.058s, 0.07s})


repeat = 2